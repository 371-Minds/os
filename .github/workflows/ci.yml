name: CI - Task Manager API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Validate OpenAPI spec
        run: npx swagger-cli validate specs/openapi.yaml

      - name: Run Jest tests
        run: npm test

      - name: Run BDD feature tests
        run: npx cucumber-js specs/tasks.feature --require tests/bdd

      - name: Build Docker image
        run: docker build -t task-manager-api .

      - name: Run tests in Docker
        run: docker-compose run --rm test

name: CI - Task Manager API & Agents

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build all projects (lib + apps)
        run: npx nx run-many -t build --all

      - name: Test all projects
        run: npx nx run-many -t test --all

      - name: Validate OpenAPI spec
        run: npx swagger-cli validate specs/openapi.yaml

      - name: Run BDD feature tests
        run: npx cucumber-js specs/tasks.feature --require tests/bdd
üîÅ How It Works

Build step ‚Üí Nx compiles libs/agents-core first, then API + agents.

This ensures agents can‚Äôt run without a valid, built agents-core.

Test step ‚Üí Runs all tests (API unit/integration, library tests, etc.).

Spec validation ‚Üí Confirms openapi.yaml is valid.

BDD execution ‚Üí Runs Cucumber against tasks.feature.

‚úÖ Benefits

No agent can run with a broken agents-core.

agents-core acts as a single source of utilities, tested independently.

CI guarantees spec compliance + contract testing + BDD validation.

Scales easily when you add new agents (nx run-many auto-includes them).

              - name: Cache
  uses: actions/cache@v4.2.4
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false
          
Extend Later

You can enhance this pipeline with:

Contract Validation ‚Üí check code matches openapi.yaml
(using swagger-cli validate specs/openapi.yaml)

BDD Tests Execution ‚Üí run cucumber-js on tasks.feature if you want direct Gherkin-based testing

Security Scans ‚Üí npm audit or snyk integration

Nx build/test

Docker build/push to Docker Hub or GHCR

Akash deploy step (akash tx deployment update)
